# 📡 הוראות תקשורת MCP - סוכן CLIENT

## 🔧 חיבור אוטומטי ל-MCP

**אתה סוכן CLIENT** - אחראי על ממשק הלקוחות והאפליקציה המובילית.

השרת `AgentsCommunication` זמין לך **אוטומטית** דרך MCP.

---

## 🛠️ כלי תקשורת זמינים

### 1️⃣ שליחת הודעה לסוכן ADMIN
**שם הכלי:** `send_message`

**מתי להשתמש:**
- כשזיהית בעיה שדורשת תשומת לב של ADMIN
- כשהשלמת משימה שADMIN צריך לדעת עליה
- כשאתה צריך אישור/החלטה מADMIN

**פורמט:**
```json
{
  "from": "CLIENT",
  "to": "ADMIN",
  "message": "טקסט ההודעה בעברית או אנגלית",
  "context": {
    "key": "value"
  }
}
```

**דוגמאות:**
```json
{
  "from": "CLIENT",
  "to": "ADMIN",
  "message": "לקוח השלים כרטיסייה - האם לשלוח פוש אוטומטי?",
  "context": {
    "business_code": "0001",
    "customer_phone": "0501234567",
    "punches": 10
  }
}
```

```json
{
  "from": "CLIENT",
  "to": "ADMIN",
  "message": "זיהיתי שגיאה ב-RLS של customers - דורש בדיקה",
  "context": {
    "error": "Row-level security policy violation",
    "table": "customers"
  }
}
```

---

### 2️⃣ קריאת הודעות מADMIN
**שם הכלי:** `read_messages`

**מתי להשתמש:**
- בתחילת כל משימה חדשה
- לפני שינויים משמעותיים
- כשאתה ממתין להחלטה

**פורמט:**
```json
{
  "agent_name": "CLIENT"
}
```

**תשובה תכלול:**
```json
{
  "messages": [
    {
      "id": 1,
      "from": "ADMIN",
      "to": "CLIENT",
      "message": "תוכן ההודעה",
      "context": {},
      "timestamp": "2025-01-26T10:30:00Z"
    }
  ]
}
```

---

### 3️⃣ עדכון מצב נוכחי
**שם הכלי:** `update_agent_state`

**מתי להשתמש:**
- כשאתה מתחיל לעבוד על קומפוננטה חדשה
- כשאתה עובר בין business codes
- כשאתה משנה מסך/פיצ'ר

**פורמט:**
```json
{
  "agent_name": "CLIENT",
  "state": {
    "current_task": "תיאור המשימה",
    "current_file": "app/(tabs)/PunchCard.tsx",
    "business_code": "0001",
    "status": "working"
  }
}
```

---

### 4️⃣ בדיקת מצב ADMIN
**שם הכלי:** `get_agent_state`

**מתי להשתמש:**
- לפני שאתה משנה משהו שADMIN אולי עובד עליו
- כדי לדעת אם ADMIN זמין

**פורמט:**
```json
{
  "agent_name": "ADMIN"
}
```

---

## 📋 תהליך עבודה מומלץ

### בתחילת כל משימה:
1. קרא הודעות: `read_messages` → `{"agent_name": "CLIENT"}`
2. עדכן מצב: `update_agent_state` → ציין מה אתה עושה
3. בצע את המשימה
4. דווח לADMIN אם נדרש: `send_message`

### לפני שינויים גדולים:
1. בדוק מצב ADMIN: `get_agent_state` → `{"agent_name": "ADMIN"}`
2. שלח הודעה: "אני מתכנן לשנות X, בסדר?"
3. המתן לאישור
4. בצע

### כשזקוק להחלטה:
```json
{
  "from": "CLIENT",
  "to": "ADMIN",
  "message": "זיהיתי 2 גישות לפתרון הבעיה. איזו לבחור?",
  "context": {
    "option_A": "פתרון פשוט עם MCP חדש",
    "option_B": "שימוש ב-Supabase Realtime",
    "recommendation": "A - יותר מהיר"
  }
}
```

---

## ⚠️ כללים חשובים

1. **תמיד השתמש ב-"CLIENT" בשדה from**
2. **לא לשנות קוד אדמין ללא אישור**
3. **דווח על כל שגיאה קריטית**
4. **עדכן מצב לפני משימות ארוכות**
5. **המתן לתשובה במקרה של שאלה**

---

## 🎯 דוגמאות מהחיים

**תרחיש 1: השלמת תיקון**
```json
{
  "from": "CLIENT",
  "to": "ADMIN",
  "message": "תיקון ה-UI ב-PunchCard הושלם. הכרטיסייה מציגה כעת 'כרטיסיית [שם מוצר]' ו'בחר' כפתור.",
  "context": {
    "files_changed": ["app/(tabs)/PunchCard.tsx"],
    "tested": true
  }
}
```

**תרחיש 2: בעיה לא צפויה**
```json
{
  "from": "CLIENT",
  "to": "ADMIN",
  "message": "אפליקציה לא עולה - שגיאת RNFBAppModule. זה קשור ל-Firebase?",
  "context": {
    "error": "Native module RNFBAppModule not found",
    "file": "app/(tabs)/_layout.tsx"
  }
}
```

**תרחיש 3: בקשת הנחיה**
```json
{
  "from": "CLIENT",
  "to": "ADMIN",
  "message": "יש צורך ב-prebuild למשהו? קראתי את ההודעות שלך על FCM",
  "context": {
    "related_to": "Firebase setup"
  }
}
```

---

**זכור:** תקשורת טובה = עבודה יעילה. השתמש בכלים לעדכן ולתאם!
